---
- name: Create job templates for playbooks
  hosts: localhost
  gather_facts: false

  vars:
    controller_labels:
      - name: "aws"
      - name: "ec2"
      - name: "cloud.aws_ops"
      - name: "network"
      - name: "backup"
      - name: "demo"

    controller_projects:
      - name: "RH Community of Practice / Network Backup & Restore"
        description: "The Ansible Network Backup Validated Content provides a comprehensive solution for managing network backups and restores across supported network platforms. This validated content offers two key functionalities: backup and restore, each designed to be platform-agnostic and user-friendly."
        scm_type: "git"
        scm_url: "https://github.com/redhat-cop/network.backup"
        scm_update_on_launch: true
        id: network.backup
        
      - name: "RH Community of Practice / AWS Operations"
        description: "This collection is curated to provide users with a robust set of roles, playbooks, and rulebooks that simplify and streamline various AWS operations."
        scm_type: "git"
        scm_url: "https://github.com/redhat-cop/cloud.aws_ops"
        scm_update_on_launch: true
        id: cloud.aws_ops
        
    controller_templates:
      - name: "RH Community of Practice / Network Backup"
        description: "This job template executes the run_network_backup.yaml playbook to automate the backup of network configurations. It captures essential network settings and securely stores them, ensuring that they can be restored if needed. The job template can be scheduled for regular backups to maintain up-to-date network configurations."
        project: "RH Community of Practice / Network Backup & Restore"
        playbook: "extensions/patterns/backup/playbooks/run_network_backup.yaml"
        labels: "network,backup"
        survey_enabled: true
        survey_file: "extensions/patterns/backup/template_surveys/backup.yaml"
        id: network.backup

      - name: "RH Community of Practice / Network Restore"
        description: "This job template runs the run_network_restore.yaml playbook to restore previously backed-up network configurations. It ensures that network settings are accurately re-applied, enabling recovery from failures or replication of network environments. The job template can be triggered to restore network configurations as needed."
        project: "RH Community of Practice / Network Backup & Restore"
        playbook: "extensions/patterns/restore/playbooks/run_network_restore.yaml"
        labels: "network,backup"
        survey_enabled: true
        survey_file: "extensions/patterns/restore/template_surveys/restore.yaml"
        id: network.backup
        
      - name: "RH Community of Practice / Create AWS EC2 Instance"
        description: "This job template runs the create_ec2_instance.yml playbook to automate the provisioning of EC2 instances on AWS. It simplifies the process of creating and configuring EC2 instances by capturing necessary parameters through a survey, ensuring a consistent and repeatable instance creation process."
        project: "RH Community of Practice / AWS Operations"
        playbook: "extensions/patterns/configure_ec2/playbooks/create_ec2_instance.yml"
        labels: "aws,ec2,cloud.aws_ops"
        survey_enabled: true
        survey_file: "extensions/patterns/configure_ec2/template_surveys/create_ec2_instance.yml"
        id: cloud.aws_ops

      - name: "RH Community of Practice / Terminate AWS EC2 Instance"
        description: "This job template runs the terminate_ec2_instance.yml playbook to automate the safe termination of EC2 instances on AWS. It ensures that instances are properly terminated, releasing associated resources, and preventing unnecessary costs. The job template can be executed to clean up EC2 instances as needed."
        project: "RH Community of Practice / AWS Operations"
        playbook: "extensions/patterns/configure_ec2/playbooks/terminate_ec2_instance.yml"
        labels: "aws,ec2,cloud.aws_ops"
        survey_enabled: true
        survey_file: "extensions/patterns/configure_ec2/template_surveys/terminate_ec2_instance.yml"
        id: cloud.aws_ops
        
  tasks:
    - name: Check if required variables are defined
      assert:
        that:
          - aap_url is defined
          - aap_username is defined
          - aap_password is defined
        fail_msg: "Required variables are missing! aap_url, aap_username, and aap_password must be defined."
        success_msg: "All required variables are defined."

    - name: Create labels
      ansible.controller.label:
        controller_host: "{{ aap_url }}"
        controller_username: "{{ aap_username }}"
        controller_password: "{{ aap_password }}"
        name: "{{ item.name }}"
        organization: "{{ aap_organization | default('Default') }}"
        validate_certs: false
      loop: "{{ controller_labels }}"

    - name: Create projects
      ansible.controller.project:
        controller_host: "{{ aap_url }}"
        controller_username: "{{ aap_username }}"
        controller_password: "{{ aap_password }}"
        name: "{{ item.name }}"
        description: "{{ item.description }}"
        organization: "{{ aap_organization | default('Default') }}"
        scm_type: "{{ item.scm_type }}"
        scm_url: "{{ item.scm_url }}"
        state: "present"
        validate_certs: false
      loop: "{{ controller_projects }}"

    - name: Clone project locally to access survey files
      git:
        repo: "{{ item.scm_url }}"
        dest: "/tmp/{{ item.id }}"
        force: yes
      loop: "{{ controller_projects }}"
      when: item.scm_type == "git"

    - name: List contents of the cloned project directory
      command: ls -l /tmp/
      register: ls_output

    - name: Display directory contents
      debug:
        var: ls_output
      when: ls_output is defined
  
    - name: Create job templates
      ansible.controller.job_template:
        controller_host: "{{ aap_url }}"
        controller_username: "{{ aap_username }}"
        controller_password: "{{ aap_password }}"
        name: "{{ item.name }}"
        description: "{{ item.description }}"
        organization: "{{ aap_organization | default('Default') }}"
        project: "{{ item.project }}"
        playbook: "{{ item.playbook }}"
        job_type: "run"
        labels: "{{ item.labels }}"
        survey_enabled: "{{ item.survey_enabled }}"
        survey_spec: "{{ lookup('file', '/tmp/' ~ item.id ~ '/' ~ item.survey_file) | from_yaml }}"
        ask_inventory_on_launch: true
        ask_credential_on_launch: true
        ask_labels_on_launch: true
        ask_job_type_on_launch: true
        validate_certs: false
      loop: "{{ controller_templates }}"

    - name: Update demo template
      ansible.controller.job_template:
        name: Demo Job Template
        description: This template serves as a quick introduction to how Ansible Automation works. It runs a basic automation task, allowing you to see Ansible in action without needing to set up anything complex. You can use this template to understand how job templates operate and test how Ansible interacts with systems in a simple, safe environment.
        labels: demo
        validate_certs: false
